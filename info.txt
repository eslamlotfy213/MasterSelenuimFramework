chromedriver driver= new chromedriver(); 
class methods only

interface methods
Webdriver driver = new chromedriver();

driver.close();   close only tab
driver.quit(); close all assoiscated windows

driver.switchTo().frame() || driver.switchTo().window() || driver.switchTo().alert()
driver.navigate().forward();
SelectAllOptions() is not a valid command In webdriver.
deselectAll() is a valid command is a valid command in Select 
Selenium IDE is available as Firefox Addons.

-------------------------console----------------------------------------
<p  class='error'    >
$('p.error)	
$x('p.error)
//selenuim manager
------------------------------------------------------------------------------------------------------------------------------------------
//8 locators
1.Id
2.name
3.tagname
4.xpath
5.css selector
6.classname
7.linktext 
8.partial linktext
-----------------------css selector-------------------------------------------------------------------------------------------------------------
    <input type="text" placeholder="Usrtname" value="">
	ClassName >>> tagname.className  input.className
	id        >>> tagname#ID         input.id
	tagname[attrubure='value']       input[type='text']
	tagname[attrubure='value']:nth-child(index)
    partentTag chilTag	
-----------------------wait---------------------------------------------   
   implict.manage.wait(Duration.sec());
-----------------------xpath--------------------------------------------
//Tagname[@attrubure='value']
//input[@type='text'][index]

<input type="text" placeholder="Username">
//input[@placeholder=’Username’]

//Tagname[@attribute=’value’][index]
//parentTagname/childTagname

//button[contains(@class,'submit')]  – Regular expression 
//tagname

//header/div/button[1]/following-sibling::button[1]

//header/div/button[1]/parent::div
-----------------------css selector-------------------------------------
input[type='text']:nth-child(index)
-----------------tags travels-------------------------------------------
Xpath selector
//partentTag/childlTag
	//form/h1[index]
	//form/input[3]
	//header/div/button[1]

css selector
partentTag childlTag
  form h1
--------------------------* start regulare expersion--------------------
when attribute is changed
<input type='password' />

CSS
input[type*='pass']
div[class*='pwd']

Xpath
//input[contains(@type,'password')]
//div[contains(@class,"pw")]
---------------------text()-----------------------------------------------------
Xpath
//button[text()='Log Out']

----------------------contains()-----------------------------------------------
xpath
//button[contains(text(),'Login')]

-------parent/child only--------------------------------------------------------
absolute xpath
start with /
/html/body/header/button 

relateive xpath	
start with //	
//header/button[1]	


Example :
<button class="btn btn-primary">practice</button>
<button class="btn btn-primary">login</button>
<button class="btn btn-primary">Signup</button>

solve : 
//header/div/button[1]/following-sibling::button[1]	

//header/div/button[1]         from parent to child 
/following-sibling::button[1]  from sibling to sibling
 -----------------traverse from child to parent-----::parent--------------------------------------------------------------
                 child/parent::tagname
//header/div/button[1]/parent::div
//header/div/button[1]/parent::div/parent::header

----------------get()--navigate().to()----------------------------------
get()         -> get fully loaded + wait
navigate().to -> navigate to website  

------------------------------------------------------------------------
1.Static Drowdownp-select 
2.Dynamic dropdown with indexes
3.Parent child relathionship xpath   -> parent space child
			   
Xpath selector -> //li[@class="ui-menu-item"]/a
css selector   -> li[class="ui-menu-item"] a
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
TestNg testing framework for assertion	
-------------------------------------checkbox checked or not checked---------------------------------
ISselected()
-----------------------------------------------------------------------------------------------------
if you find space remove spacecs and add .
css selector >> .className 	
-------------------------radio button--------------------------------------------------------
isenabled()
---------------------------------------------------------------------------------------------	
	Framework
	https://rahulshettyacademy.com/client
	dexcomnew98@gmail.com
	User123#

---------------------stream----------------------------------------------------------------------------------
      cartProducts.stream().filter(cartProduct -> cartProduct.getText().equalsIgnoreCase(productName));	
----------------------anyMatch------------------------------------------------------------------------------------
anyMatch return boolen

	  cartProducts.stream().anyMatch(cartProduct -> cartProduct.getText().equalsIgnoreCase(productName));
-------------------------------------------------------------------------------------------------
traverse from parent to child 
.className from  className from child 
.totalRow button
-----------------------------actions ------------------build perform---------------------------------------
1.have tests webdriver driver = new chromedriver();
2.creata class page1 
{ 
 Webdriver driver ;
 public page1(webdriver driver) 
{
 this.driver = driver;
}
3.add constractor() for landing page1
4.pass webdriver driver  dh from tests and add then into
- webdriver dh-driver 
- WebDriver driver;
 public LandingPage(WebDriver driver){
  this.driver=driver; //driver comes from test after create LandingPage landingPageobj = new LandingPage(driver); //driver from tests
  }
-------------------------------super(driver)------------------------------------------------------
traveirse driver from child to parent
tests > driver >landing page (childmethods) >  super > extent > (parentmethods)
  /*
    This class contains all common methods
    use it by extend child class from this parent
    use it also by super(driver);
    driver comes from testcase
    driver pass to super(driver);
    then create a constructor inside parent
     */
	 
	-----------------------------------
	thread count = 5
	allow five methods to run parallelly 
	
	  <test thread-count="1" name="Submit Order Test">
    <classes>
      <class name="SubmitOrderTest"/>
    </classes>
  </test> <!-- Test -->

	thread count = 1
    one method in this class at time is allowed to run parallelly  	
---------------------------------CMD run project in mvn -----------------------------------------------------------------------------------------------
maven testng integration 
install maven-surefire-plugin
add 
<profile>
<id="">   
 <build>
 
 </build>
</profile>
mvn test -P (elly id="")

<profiles>
        <profile>
            <id>ErrorValidation</id>
            <build>
                <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <version>3.0.0-M6</version>
                            <configuration>
                                <suiteXmlFiles>
                                    <suiteXmlFile>testSuites/testng_smokeTesingErrorValidation.xml</suiteXmlFile>
                                </suiteXmlFiles>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>

    <build>
        <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M6</version>
                    <configuration>
                        <suiteXmlFiles>
                            <suiteXmlFile>testSuites/testng_parallel.xml</suiteXmlFile>
                        </suiteXmlFiles>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
----------------------------run CMD from maven browser-----------------------------------------------------------------------------------
to run single separate test case
mvn -Dtest-SubmitOrderTest test


-D >>>>> maven parameter
mvn test -Dbrowser=firefox

//check if browser !=null > true get data from mvn  and if browser ==null get data from file
String browser =  System.getProperty("BrowserName") !=null ? System.getProperty("BrowserName") : pro.getProperty("BrowserName");
// String browser= pro.getProperty("BrowserName");
----------------commands on cmd--------------------------------------------------------------------------------------------------
mvn test -PErrorValidation -DBrowserName=edge
-------------------jenkins--------------------------------------------------------------------------
1.java -jar jenkins .war =httpPort=9000
2.General > advanced > cutome workspace
          > D:\Selenium4\Selenuim_Framework_Design
3.Directory > add project path 
4.build     > add build step 
            > invoke Top level Maven targets
5.add commands :test -PErrorValidation -DBrowserName=firefox  
\.jenkins\$(JENKINS_HOME)
------------------jenkins prarmeter--------------------------------------
This project is parameterized 
add parameter
Choice Paramter
 Name: BrowserName
 Choices chrome - firefox - edge - ie 

5.add commands :test -PErrorValidation -DBrowserName="$BrowserName"
test -PErrorValidation -DBrowserName="$browserName"
---------------------------headlees mode---------------------------------
mvn test -PErrorValidation -DBrowserName=headless
------------------------jenkins build trigger-----------------------------
Build periodically
 Schedule 45 7 24 * * *
1. 45 dh minites 
2. 7 dh hours 
3. 24 dh days 
4.   dh months
5.   dh Week
   Schedule H 6 * * *
   was last build saturday Aug 6 2022 6:24:55 will next build next sunday Aug 7 2022 6:24:55
   */5 * * * *
   to run every 5 mins
----------Questions------------------------------------------------------------------------------------------------------------------------------------
1.POM design patter
2.encapsulation > loctores private - methods public
3.interface > listerces
4.parallelly > testNG parallel="tests"
<test>
  <classes>
     <class name"test"/>
  </classes>
</test>
5.ThreadLocal<ExtentTest> extentTest = new ThreadLocal<ExtentTest>(); Thread safa
# extentTest.set(test)
# extentTest.get()
6.using static testing ? avoid using when making parallel as need maintain concurrent driver
use it for readly mode

7.how use global varaible ?
8. use group to set one test to perform
9. IRetryAnalyzer flakytest ?
10. take screenshot ? using testng listener 
----------------------------------------this---------------------------------------------
this.a = a;   // this refere to current class variable
------------------------------------super-------------------------------------------------------------
invokde parent class constractor
lazem inhertance
super();
Example:
1.
PS2 ps2 = new PS2(3); //runnner
ps2.multiplythree();


2.public class PS2 extends PS3
int a ;
PS2(int a)
{
  super(a); //invokde parent class constractor
  this.a = a;
}

3.public class PS3
int a;
PS3(int a)
{
 this.a = a;
}

public int multiplythree()
{
a= a+3;
return a;
}


@Test
   public void Run() {
       P1 p1 = new P1(3);
       System.out.println(p1.increment());
       System.out.println(p1.decrement());

       Todo();

      // Multiply m = new Multiply(3); no need to create obj we make super to send value from child to parent
       System.out.println(p1.multiplthree());

   }
-------------------cucumber Testng---------------------------------------------------
BDD  >business readable domain specific language

Scenarios > cucumber testcases are represented as scenarios
Steps >  test steps give ,  when ,  then 
feature > testsuits

add dependency > cucumber-java
add dependency > cucumber-Testng

<!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-java -->
<dependency>
    <groupId>io.cucumber</groupId>
    <artifactId>cucumber-java</artifactId>
    <version>7.14.0</version>
</dependency>

<!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-testng -->
<dependency>
    <groupId>io.cucumber</groupId>
    <artifactId>cucumber-testng</artifactId>
    <version>7.14.0</version>
</dependency>

    @CucumberOptions(
            features="src/test/java/features",
            monochrome=true,
            plugin = { "html:target/cucumbrt.html"},
            glue= {"stepDefinations"}
    )
    public class TestRunner extends AbstractestNGCucmbrtTests{

    }

TestNging has datadriver
cucumber with examples
background usging to start the prerquiests ? lanuching driver

**********************************************************************************************************************
cucumber TestNG > use AbstractestNGCucmbrtTests
cucumber Junit > use  @RunWith(Cucumber.class)
*********************************************************************************************************************

<productName>                               ------>  (.+)
el function/methods regulare expression     ------>  (^    $)  
"Thanks for confirmation" this message      ------>  {string}
tidy gerkin plugin

@cucmberoptions features, glue, plugin
testrunner -------> extends abstractiontestng{

}

-------------------------cucumber Junit-----------------------------------------------------------------------
     <!-- https://mvnrepository.com/artifact/junit/junit -->
      <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>4.13.2</version>
          <scope>test</scope>
      </dependency>

        <!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-java -->
    <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-java</artifactId>
        <version>7.14.0</version>
    </dependency>

      <!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-junit -->
      <dependency>
          <groupId>io.cucumber</groupId>
          <artifactId>cucumber-junit</artifactId>
          <version>7.14.0</version>
          <scope>test</scope>
      </dependency>

    @RunWith(Cucumber.class)
    @CucumberOptions(
            features="src/test/java/features",
            plugin = { "pretty", "io.qameta.allure.cucumber7jvm.AllureCucumber7Jvm"}
            , glue= {"stepDefinations"}
    )
    public class TestRunner {
    //tags= {"@DeletePlace"}  compile test verify
    }
-----------------------------------cucumber how it works+++++++++++++++++++++++++++++++++++
write "<name>"  rather than <name>
open target folder to get the report
-------------------------------selenuim grid--------------------------------------------------------------------------------------
local 
-hub 
-node
     /*
    hub: java -jar selenium-server-4.15.0.jar  hub
    hub: java -jar selenium-server-4.15.0.jar node
    node: java -jar selenium-server-4.15.0.jar node --detect-drivers true
     */


another machince
-hub same hub
-Xpub ---->publish events
-Xsub ----->subscribe events

java -jar <SeleniumJarname> node --detect-drivers true --publish-events tcp://192.168.1.139:4442 --subscribe-events tcp://192.168.1.139:4443

Example :  XPUB binding to [binding to tcp://*:4442, advertising as tcp://192.168.1.3:4442]
,XSUB binding to [binding to tcp://*:4443, advertising as tcp://192.168.1.3:4443]

-------------------------------devchrometools----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
create maven project
dependency java
chromium Driver class
chrome driver and edge driver are inherited from chromium driver


--------------------------------Selenuim Database----------------------------------------------------------------
download mysql
http://dev.mysql.com/downloads/

EG-1BTJRG3
STA\Eslam.Lotfy

1.install mysql server 
2.create database in mysql server
create database Qadbt;
BD Qadbt
username root
password Azaz123#
insert into Table value()
create maven project 
create class
add dependency


use-------------mysql-connector--------------------------------
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>8.0.33</version>
			</dependency>
			
        Connection con = DriverManager.getConnection("jdbc:mysql://"+ localhost +":"+3306+"/Qadbt",username,password);
use-------------sqlserver-connector--------------------------------
        <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>mssql-jdbc</artifactId>
            <version>9.4.0.jre11</version>
        </dependency>
        Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Qadbt;user=root;password=Azaz123#;");

-------------------------------------crosee browser ---------------------------------------------------------------
create maven project
add testN and selenuim java
create account on browser stack
open .https://automate.browserstack.com/dashboard/v2/quick-start/get-started
open https://github.com/browserstack/testng-browserstack
add dependency to read yml file
<dependency>
    <groupId>com.browserstack</groupId>
    <artifactId>browserstack-java-sdk</artifactId>
    <version>LATEST</version>
    <scope>compile</scope>
</dependency>


-------------------------interview ------------------------------------------------------
Certainly! To test a GET API request that returns the last 3 calls made by your number, you can create various test cases to ensure the functionality works as expected. Here are five test cases:

Valid Request - Successful Response:

Request: GET /api/calls?number=YOUR_NUMBER&limit=3
Expected Response: 200 OK
The response should include the details of the last 3 calls made by YOUR_NUMBER.
No Calls Made Yet:

Request: GET /api/calls?number=YOUR_NUMBER&limit=3
Expected Response: 200 OK (Empty List)
If no calls have been made from YOUR_NUMBER, the response should indicate an empty list.
Invalid Number Parameter:

Request: GET /api/calls?number=INVALID_NUMBER&limit=3
Expected Response: 400 Bad Request
If the number parameter is not valid, the API should return a 400 Bad Request response.
Insufficient Limit:

Request: GET /api/calls?number=YOUR_NUMBER&limit=1
Expected Response: 200 OK
Ensure that the API respects the limit parameter and returns only the requested number of calls.
Exceeding Limit:

Request: GET /api/calls?number=YOUR_NUMBER&limit=10
Expected Response: 200 OK (Up to 3 calls)
Verify that the API handles cases where the limit parameter exceeds the actual number of calls made by YOUR_NUMBER, returning all available calls up to the limit.


----------------------------------------allure report-----------------------------------------------------------
To run allure report
•	Open folder directory where [allure-results]
•	Run cmd and enter : allure serve allure-results


- usgin allure report for cucumbr
- usgin allure report for testng
- add allure.attachments()
----------------------------------------Jenkins  pipline ci cd ----------------------------------------------------------------
open jenkins
create freestyle
kind secret test
scope : global , jenkines , nodes , items , child itesm
secret ? create a new token from developers settings

from githup website
go setting
webhooks

go jenkins
manage jenkins
system
scroll down to githup section
click on checkbox ? specify another hook URL
link https//localhost/githup-webhook
add the link  on the webhooks on githup






1.downlaod jenkins from https://www.jenkins.io/download/ Stable (LTS)
2.Go to folder of jenkins
2.open CMD and wrire java jar (file of jenkins)  ex : java -jar jenkins.war -httpPort=8080 --enable-future-java
3.password : deab25c6930d469d963aacf83d8291af
4. open localhost:8080
user name :  Eslam
password:    Acac123456
Full name:	 Eslam Lotfy
Jenkins URL: http://localhost:8080/
5.create New job > create New item  > fress style project
6. General > advanced >  User  Custom workSpace
7. Build   >  select execute windown batch command
8. command > dotnet test CsharpSelenuimFrameWork.csproj


=========================================================================
1.downlaod jenkins from https://www.jenkins.io/download/ Stable (LTS)
2.Go to folder of jenkins
3.password : deab25c6930d469d963aacf83d8291af
4.linke jenkins : http://localhost:8080/login?from=%2F
5.enter deab25c6930d469d963aacf83d8291af on Administrator password
6.install suggesting plugines
7.download jdk 8 java environment

java -jar jenkins.war --enable-future-java



--------------------fluent wait--------------------------------------------------------------------------------------------------------------------------
finds the Web elements  repeatedly at regular intervals of times until timeouts  or till objects get found
timeout : 30s , polling  2 sec


unlike webdriver wait > need to build the customized wait


- Wait > interface
- FluentWait > class

Wait<WebDriver> wait = new FluentWait<WebDriver>(driver)

-------------------------------json file to string to hash map------------------------------------------------------------------------------------------------------
As Rahul said the method with only file parameter has been deprecated.Please use the following code

FileUtils.readFileToString(new File(System.getProperty("user.dir") +"\\src\\test\\java\\rahulshetty\\data\\purchaseorder.json"),
        StandardCharsets.UTF_8);
and write import java.nio.charset.StandardCharsets;  at top where import statements are written.

    @DataProvider
    public Object[][] getData() throws IOException {

//        HashMap<String,String> map = new HashMap<String,String>();
//        map.put("email","dexcomnew98@gmail.com");
//        map.put("password","User123#");
//        map.put("product","ZARA COAT 3");
//
//
//        HashMap<String,String> map1 = new HashMap<String,String>();
//        map1.put("email","postman2024@gmail.com");
//        map1.put("password","User123#");
//        map1.put("product","IPHONE 13 PRO");



        List<HashMap<String, String>> data= getJsonDataToMap();

        return new Object[][]
                {
                        {data.get(0)}, {data.get(1)}
                };

    }
---------------------------------------------------------------------------------------------------------------------------------------------------------








